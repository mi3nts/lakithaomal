% Auto-generated by cameraCalibrator app on 01-Apr-2020
%-------------------------------------------------------
clc
clear all 
close all 

addpath("functions/")

jetsonSN    = '002'
setNum      = '1'

% Define images to process
imageFileNames = {...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_00_40_28_394452_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_00_40_58_660498_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_00_41_23_667819_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_00_41_50_934824_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_00_42_14_639005_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_00_42_38_403410_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_00_43_00_102290_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_00_43_36_571202_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_00_44_03_296711_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_00_44_41_694820_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_00_58_52_830652_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_00_59_34_349471_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_01_00_00_834721_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_01_00_32_551930_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_01_00_58_447069_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_01_01_21_406380_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_01_01_57_664492_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_01_02_30_368067_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_01_02_49_083378_thermal.jpg',...
    '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_01_03_13_386326_thermal.jpg',...
%     '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_01_03_33_189726_thermal.jpg',...
%     '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_01_03_53_471965_thermal.jpg',...
%     '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_01_04_13_482513_thermal.jpg',...
%     '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_01_04_30_012930_thermal.jpg',...
%     '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_01_04_53_603655_thermal.jpg',...
%     '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_01_05_10_092858_thermal.jpg',...
%     '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_01_05_38_782783_thermal.jpg',...
%     '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_01_05_57_271086_thermal.jpg',...
%     '/home/teamlary/mintsData/jetson001Set2/thermal/2020_04_01_01_06_11_787439_thermal.jpg',...
    };

% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates of the corners of the squares
squareSize = 35;  % in units of 'millimeters'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
[thermalParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors
h1=figure; showReprojectionErrors(thermalParams);

% Visualize pattern locations
h2=figure; showExtrinsics(thermalParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, thermalParams);

% For example, you can use the calibration data to remove effects of lens distortion.
undistortedImage = undistortImage(originalImage, thermalParams);

save('dataFiles/DF_004_thermalJetson001_Set2_2020_04_02')
save('dataFiles/DF_004_thermalParametorsJetson001_Set2_2020_04_02','thermalParams')
save('dataFiles/DF_004_pythonThermalJetson001_Set2_2020_04_02',...
        'imageFileNames',...
        'imagePoints'...
        )  
    
close all